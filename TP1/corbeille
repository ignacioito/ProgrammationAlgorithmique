



      if(longueurQueue(queueCaisse1) == 0) offrirClient(&queueCaisse1, nouveauClient);
      if(longueurQueue(queueCaisse2) == 0) offrirClient(&queueCaisse2, nouveauClient);
      if(longueurQueue(queueCaisse3) == 0) offrirClient(&queueCaisse3, nouveauClient);
      if(longueurQueue(queueCaisse4) == 0) offrirClient(&queueCaisse4, nouveauClient);



for (int i = 0; i < CICLOMAX; ++i)
  {
  	for (int j = 0; j < TAUX_ARRIVE; ++j)
  		{
  			/* code */
  		}	
  }



/*
      if((longueurQueue(queueCaisse1) && (longueurQueue(queueCaisse2) && (longueurQueue(queueCaisse3) && (longueurQueue(queueCaisse4) == 0) 
      {offrirClient(&queueCaisse1, nouveauClient);}


     



      if((longueurQueue(queueCaisse1) || (longueurQueue(queueCaisse2) || (longueurQueue(queueCaisse3) || (longueurQueue(queueCaisse4) == 0) 
      {
        if (longueurQueue(queueCaisse1) == 0)
        {
          (offrirClient(&queueCaisse1, nouveauClient);
        }
        if (longueurQueue(queueCaisse2) == 0)
        {
          (offrirClient(&queueCaisse2, nouveauClient);
        }
        if (longueurQueue(queueCaisse3) == 0)
        {
          (offrirClient(&queueCaisse3, nouveauClient);
        }
        if (longueurQueue(queueCaisse4) == 0)
        {
          (offrirClient(&queueCaisse4, nouveauClient);
        }

      }
*/







      if (longueurQueue(queueCaisse1) < longueurQueue(queueCaisse2) && longueurQueue(queueCaisse1) < longueurQueue(queueCaisse3) && longueurQueue(queueCaisse1) < longueurQueue(queueCaisse4))
      {}

      if (longueurQueue(queueCaisse1) > longueurQueue(queueCaisse2) && longueurQueue(queueCaisse2) < longueurQueue(queueCaisse3) && longueurQueue(queueCaisse2) < longueurQueue(queueCaisse4))
      {offrirClient(&queueCaisse2, nouveauClient);}

      if (longueurQueue(queueCaisse1) > longueurQueue(queueCaisse2) && longueurQueue(queueCaisse2) > longueurQueue(queueCaisse3) && longueurQueue(queueCaisse3) < longueurQueue(queueCaisse4))
      {offrirClient(&queueCaisse3, nouveauClient);}

      if (longueurQueue(queueCaisse1) > longueurQueue(queueCaisse2) && longueurQueue(queueCaisse2) > longueurQueue(queueCaisse3) && longueurQueue(queueCaisse3) > longueurQueue(queueCaisse4))
      {offrirClient(&queueCaisse4, nouveauClient);} 